version: '3'

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        - RAILS_ENV=production
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      HOST: ${HOST:-localhost}
      WEB_APP_HOST: http://${HOST:-localhost}:4500
      RAILS_ENV: production
      RAILS_LOG_TO_FILE: ${RAILS_LOG_TO_FILE:-false}
      RAILS_LOG_TO_STDOUT: ${RAILS_LOG_TO_STDOUT:-true}
      DATABASE_URL: 'postgres://equine_event_api:${POSTGRES_PASSWORD}@postgres/equine_event_api_production'
    ports:
      - "3000:3000"
    command:
      sh -c "bin/rails db:migrate && bin/rails db:seed && bin/rails server"
    tmpfs:
      - /app/tmp/pids
    volumes:
      - ./log:/app/log
      - storage:/app/storage

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        - GRAPHQL_API_URL=http://api:3000/graphql
    restart: unless-stopped
    environment:
      GRAPHQL_API_URL: http://api:3000/graphql # the URL of the GraphQL API
      ACTION_CABLE_URL: ws://${HOST:-localhost}:3000/cable # the URL of the ActionCable (websocket) server
    ports:
      - "4500:4500"

  postgres:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: equine_event_api
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: equine_event_api_production
    volumes:
      - postgres:/var/lib/postgresql/data

volumes:
  storage:
  postgres:
